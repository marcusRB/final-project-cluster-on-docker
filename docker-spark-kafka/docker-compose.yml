version: "3.8"
services:

    zookeeper:
        image: wurstmeister/zookeeper:latest
        container_name: zookeeper
        expose:
            - "2181"
        ports:
            - 2181:2181
        volumes:
            - kafka_zookeeper:/opt/zookeeper-3.4.13/data
        networks:
            - kafkanet

    kafka1:
        image: wurstmeister/kafka:2.12-2.2.0
        container_name: kafka1
        command: [start-kafka.sh]
        expose:
            - "9092"
        ports:
            - 9092:9092
        environment:
        #      KAFKA_ADVERTISED_HOST_NAME: 172.25.0.12
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_PORT: 9092
            KAFKA_ADVERTISED_HOST_NAME: kafka1
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:19092
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://0.0.0.0:19092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.15.0.jar=8080:/prometheus/kafka-2_0_0.yml
        volumes:
            - ./kafka/prometheus:/prometheus
            - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
        depends_on:
            - "zookeeper"
        networks:
            - kafkanet

    kafka2:
        image: wurstmeister/kafka:2.12-2.2.0
        container_name: kafka2
        command: [start-kafka.sh]
        expose:
            - "9093"
        ports:
            - 9093:9092
        environment:
            #      KAFKA_ADVERTISED_HOST_NAME: 172.25.0.13
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_HOST_NAME: kafka2
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:9093,OUTSIDE://localhost:19093
            KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://0.0.0.0:19093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.15.0.jar=8080:/prometheus/kafka-2_0_0.yml
        volumes:
            - ./kafka/prometheus:/prometheus
            - kafka_kafka2:/opt/kafka_2.12-2.2.0/logs
        depends_on:
            - "zookeeper"
        networks:
            - kafkanet


    kafka_manager:
        image: hlebalbau/kafka-manager:1.3.3.18
        container_name: kafka_manager
        expose:
            - "9000"
        ports:
            - 9000:9000
        environment:
            ZK_HOSTS: "zookeeper:2181"
            APPLICATION_SECRET: "random-secret"
        command: -Dpidfile.path=/dev/null
        depends_on:
            - "zookeeper"
            - "kafka1"
            - "kafka2"
        networks:
            - kafkanet

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        expose:
            - "9090"
        ports:
            - 9090:9090
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        depends_on:
            - "zookeeper"
            - "kafka1"
            - "kafka2"
        links:
            - kafka1
            - kafka2
            - alertmanager
        networks:
            - kafkanet
            - promnet

    alertmanager:
        image: prom/alertmanager
        container_name: alertmanager
        privileged: true
        volumes:
            - ./alertmanager/alertmanager.yml:/alertmanager.yml
        command:
            - '--config.file=/alertmanager.yml'
        ports:
            - '9096:9093'
        networks:
            - promnet

    grafana:
        image: grafana/grafana:7.5.5
        container_name: grafana
        expose:
            - "3000"
        ports:
            - 3000:3000
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=password
        volumes:
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        depends_on:
            - "prometheus"
        links:
            - prometheus:prometheus
        networks:
            - promnet

    zeppelin:
        image: apache/zeppelin:0.9.0
        hostname: zeppelin
        container_name: zeppelin
        expose:
            - "8180"
            - "8443"
        ports:
            - 8443:8443
            - 8180:8080
        environment:
            KAFKA_BROKER_URL_1: 'kafka1:9092'
            KAFKA_BROKER_URL_2: 'kafka2:9093'
        volumes:
            - ./zeppelin/datadrive:/datadrive
            - ./zeppelin/pyspark-notebooks:/zeppelin/notebook
            - ./zeppelin/zeppelin-interpreters/interpreter.json:/zeppelin/conf/interpreter.json
        networks:
            - kafkanet
            - sparknet
            - promnet
    
    jupyterlab:
        image: andreper/jupyterlab:3.0.0-spark-3.0.0
        container_name: jupyterlab
        ports:
            - 8888:8888
        volumes:
            - shared-workspace:/opt/workspace
        networks:
           - sparknet
           - kafkanet

    spark-master:
        image: andreper/spark-master:3.0.0
        container_name: spark-master
        expose:
            - "7077"
            - "8080"
            - "4040"
        ports:
            - 7077:7077
            - 8080:8080
            - 4040:4040
        volumes:
            - shared-workspace:/opt/workspace
        networks: 
            - sparknet
            - kafkanet
                
            
    spark-worker-1:
        image: andreper/spark-worker:3.0.0
        container_name: spark-worker-1
        environment:
            - SPARK_WORKER_CORES=1
            - SPARK_WORKER_MEMORY=512m
        ports:
            - 8081:8081
        volumes:
            - shared-workspace:/opt/workspace
        depends_on:
            - spark-master
        networks:
            - sparknet


    spark-worker-2:
        image: andreper/spark-worker:3.0.0
        container_name: spark-worker-2
        environment:
            - SPARK_WORKER_CORES=1
            - SPARK_WORKER_MEMORY=512m
        ports:
            - 8082:8081
        volumes:
            - shared-workspace:/opt/workspace
        depends_on:
            - spark-master
        networks: 
            - sparknet

    spark-worker-3:
        image: andreper/spark-worker:3.0.0
        container_name: spark-worker-3
        environment:
            - SPARK_WORKER_CORES=1
            - SPARK_WORKER_MEMORY=512m
        ports:
            - 8083:8081
        volumes:
            - shared-workspace:/opt/workspace
        depends_on:
            - spark-master
        networks: 
            - sparknet
    
volumes:
    kafka_zookeeper:
    kafka_kafka1:
    kafka_kafka2:
    shared-workspace:
        name: "hadoop-distributed-file-system"
        driver: local

networks:
    kafkanet:
        name : kafkanet
        driver: bridge
    sparknet:
        name: sparknet
        driver: bridge
    promnet:
        name: promnet
        driver: bridge

